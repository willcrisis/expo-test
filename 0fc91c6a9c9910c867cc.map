{"version":3,"sources":["/Users/williankrause/des/expo-test/assets/images/robot-prod.png","/Users/williankrause/des/expo-test/constants/Colors.js","/Users/williankrause/des/expo-test/components/TabBarIcon.js","/Users/williankrause/des/expo-test/components/StyledText.js","/Users/williankrause/des/expo-test/screens/HomeScreen.js","/Users/williankrause/des/expo-test/screens/LinksScreen.js","/Users/williankrause/des/expo-test/screens/SettingsScreen.js","/Users/williankrause/des/expo-test/navigation/MainTabNavigator.js","/Users/williankrause/des/expo-test/navigation/AppNavigator.web.js","/Users/williankrause/des/expo-test/App.js","/Users/williankrause/des/expo-test/assets/images/robot-dev.png","/Users/williankrause/des/expo-test/assets/fonts/SpaceMono-Regular.ttf"],"names":["module","exports","tintColor","tabIconDefault","tabIconSelected","tabBar","errorBackground","errorText","warningBackground","warningText","noticeBackground","noticeText","TabBarIcon","props","Ionicons","name","size","style","marginBottom","color","focused","Colors","MonoText","Text","fontFamily","HomeScreen","View","styles","container","ScrollView","contentContainerStyle","contentContainer","welcomeContainer","Image","source","require","welcomeImage","getStartedContainer","DevelopmentModeNotice","getStartedText","codeHighlightContainer","homeScreenFilename","helpContainer","TouchableOpacity","onPress","handleHelpPress","helpLink","helpLinkText","tabBarInfoContainer","tabBarInfoText","navigationFilename","codeHighlightText","developmentModeText","WebBrowser","navigationOptions","header","StyleSheet","create","flex","backgroundColor","fontSize","lineHeight","textAlign","paddingTop","alignItems","marginTop","width","height","resizeMode","marginLeft","marginHorizontal","marginVertical","borderRadius","paddingHorizontal","position","bottom","left","right","Platform","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","elevation","paddingVertical","LinksScreen","title","SettingsScreen","config","web","headerMode","default","HomeStack","createStackNavigator","Home","tabBarLabel","tabBarIcon","OS","path","LinksStack","Links","SettingsStack","Settings","tabNavigator","createBottomTabNavigator","switchNavigator","createSwitchNavigator","Main","MainTabNavigator","createBrowserApp","history","App","useState","isLoadingComplete","setLoadingComplete","skipLoadingScreen","StatusBar","barStyle","AppLoading","startAsync","loadResourcesAsync","onError","handleLoadingError","onFinish","handleFinishLoading","a","async","Promise","all","Asset","loadAsync","Font","font","error","console","warn"],"mappings":"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","file":"static/js/app.445df871.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/robot-prod.c7578911.png\";","const tintColor = '#2f95dc';\n\nexport default {\n  tintColor,\n  tabIconDefault: '#ccc',\n  tabIconSelected: tintColor,\n  tabBar: '#fefefe',\n  errorBackground: 'red',\n  errorText: '#fff',\n  warningBackground: '#EAEB5E',\n  warningText: '#666804',\n  noticeBackground: tintColor,\n  noticeText: '#fff',\n};\n","import React from 'react';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport Colors from '../constants/Colors';\n\nexport default function TabBarIcon(props) {\n  return (\n    <Ionicons\n      name={props.name}\n      size={26}\n      style={{ marginBottom: -3 }}\n      color={props.focused ? Colors.tabIconSelected : Colors.tabIconDefault}\n    />\n  );\n}\n","import React from 'react';\nimport { Text } from 'react-native';\n\nexport function MonoText(props) {\n  return (\n    <Text {...props} style={[props.style, { fontFamily: 'space-mono' }]} />\n  );\n}\n","import * as WebBrowser from 'expo-web-browser';\nimport React from 'react';\nimport {\n  Image,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from 'react-native';\n\nimport { MonoText } from '../components/StyledText';\n\nexport default function HomeScreen() {\n  return (\n    <View style={styles.container}>\n      <ScrollView\n        style={styles.container}\n        contentContainerStyle={styles.contentContainer}>\n        <View style={styles.welcomeContainer}>\n          <Image\n            source={\n              __DEV__\n                ? require('../assets/images/robot-dev.png')\n                : require('../assets/images/robot-prod.png')\n            }\n            style={styles.welcomeImage}\n          />\n        </View>\n\n        <View style={styles.getStartedContainer}>\n          <DevelopmentModeNotice />\n\n          <Text style={styles.getStartedText}>Get started by opening</Text>\n\n          <View\n            style={[styles.codeHighlightContainer, styles.homeScreenFilename]}>\n            <MonoText>screens/HomeScreen.js</MonoText>\n          </View>\n\n          <Text style={styles.getStartedText}>\n            Change this text and your app will automatically reload.\n          </Text>\n        </View>\n\n        <View style={styles.helpContainer}>\n          <TouchableOpacity onPress={handleHelpPress} style={styles.helpLink}>\n            <Text style={styles.helpLinkText}>\n              Help, it didnâ€™t automatically reload!\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n\n      <View style={styles.tabBarInfoContainer}>\n        <Text style={styles.tabBarInfoText}>\n          This is a tab bar. You can edit it in:\n        </Text>\n\n        <View\n          style={[styles.codeHighlightContainer, styles.navigationFilename]}>\n          <MonoText style={styles.codeHighlightText}>\n            navigation/MainTabNavigator.js\n          </MonoText>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nHomeScreen.navigationOptions = {\n  header: null,\n};\n\nfunction DevelopmentModeNotice() {\n  if (__DEV__) {\n    const learnMoreButton = (\n      <Text onPress={handleLearnMorePress} style={styles.helpLinkText}>\n        Learn more\n      </Text>\n    );\n\n    return (\n      <Text style={styles.developmentModeText}>\n        Development mode is enabled: your app will be slower but you can use\n        useful development tools. {learnMoreButton}\n      </Text>\n    );\n  } else {\n    return (\n      <Text style={styles.developmentModeText}>\n        You are not in development mode: your app will run at full speed.\n      </Text>\n    );\n  }\n}\n\nfunction handleLearnMorePress() {\n  WebBrowser.openBrowserAsync(\n    'https://docs.expo.io/versions/latest/workflow/development-mode/'\n  );\n}\n\nfunction handleHelpPress() {\n  WebBrowser.openBrowserAsync(\n    'https://docs.expo.io/versions/latest/workflow/up-and-running/#cant-see-your-changes'\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    color: 'rgba(0,0,0,0.4)',\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center',\n  },\n  contentContainer: {\n    paddingTop: 30,\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: 'contain',\n    marginTop: 3,\n    marginLeft: -10,\n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50,\n  },\n  homeScreenFilename: {\n    marginVertical: 7,\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)',\n  },\n  codeHighlightContainer: {\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    lineHeight: 24,\n    textAlign: 'center',\n  },\n  tabBarInfoContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    ...Platform.select({\n      ios: {\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: -3 },\n        shadowOpacity: 0.1,\n        shadowRadius: 3,\n      },\n      android: {\n        elevation: 20,\n      },\n    }),\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20,\n  },\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center',\n  },\n  navigationFilename: {\n    marginTop: 5,\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: 'center',\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { ExpoLinksView } from '@expo/samples';\n\nexport default function LinksScreen() {\n  return (\n    <ScrollView style={styles.container}>\n      {/**\n       * Go ahead and delete ExpoLinksView and replace it with your content;\n       * we just wanted to provide you with some helpful links.\n       */}\n      <ExpoLinksView />\n    </ScrollView>\n  );\n}\n\nLinksScreen.navigationOptions = {\n  title: 'Links',\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 15,\n    backgroundColor: '#fff',\n  },\n});\n","import React from 'react';\nimport { ExpoConfigView } from '@expo/samples';\n\nexport default function SettingsScreen() {\n  /**\n   * Go ahead and delete ExpoConfigView and replace it with your content;\n   * we just wanted to give you a quick view of your config.\n   */\n  return <ExpoConfigView />;\n}\n\nSettingsScreen.navigationOptions = {\n  title: 'app.json',\n};\n","import React from 'react';\nimport { Platform } from 'react-native';\nimport { createStackNavigator, createBottomTabNavigator } from 'react-navigation';\n\nimport TabBarIcon from '../components/TabBarIcon';\nimport HomeScreen from '../screens/HomeScreen';\nimport LinksScreen from '../screens/LinksScreen';\nimport SettingsScreen from '../screens/SettingsScreen';\n\nconst config = Platform.select({\n  web: { headerMode: 'screen' },\n  default: {},\n});\n\nconst HomeStack = createStackNavigator(\n  {\n    Home: HomeScreen,\n  },\n  config\n);\n\nHomeStack.navigationOptions = {\n  tabBarLabel: 'Home',\n  tabBarIcon: ({ focused }) => (\n    <TabBarIcon\n      focused={focused}\n      name={\n        Platform.OS === 'ios'\n          ? `ios-information-circle${focused ? '' : '-outline'}`\n          : 'md-information-circle'\n      }\n    />\n  ),\n};\n\nHomeStack.path = '';\n\nconst LinksStack = createStackNavigator(\n  {\n    Links: LinksScreen,\n  },\n  config\n);\n\nLinksStack.navigationOptions = {\n  tabBarLabel: 'Links',\n  tabBarIcon: ({ focused }) => (\n    <TabBarIcon focused={focused} name={Platform.OS === 'ios' ? 'ios-link' : 'md-link'} />\n  ),\n};\n\nLinksStack.path = '';\n\nconst SettingsStack = createStackNavigator(\n  {\n    Settings: SettingsScreen,\n  },\n  config\n);\n\nSettingsStack.navigationOptions = {\n  tabBarLabel: 'Settings',\n  tabBarIcon: ({ focused }) => (\n    <TabBarIcon focused={focused} name={Platform.OS === 'ios' ? 'ios-options' : 'md-options'} />\n  ),\n};\n\nSettingsStack.path = '';\n\nconst tabNavigator = createBottomTabNavigator({\n  HomeStack,\n  LinksStack,\n  SettingsStack,\n});\n\ntabNavigator.path = '';\n\nexport default tabNavigator;\n","import { createBrowserApp } from '@react-navigation/web';\nimport { createSwitchNavigator } from 'react-navigation';\n\nimport MainTabNavigator from './MainTabNavigator';\n\nconst switchNavigator = createSwitchNavigator({\n  // You could add another route here for authentication.\n  // Read more at https://reactnavigation.org/docs/en/auth-flow.html\n  Main: MainTabNavigator,\n});\nswitchNavigator.path = '';\n\nexport default createBrowserApp(switchNavigator, { history: 'hash' });\n","import { AppLoading } from 'expo';\nimport { Asset } from 'expo-asset';\nimport * as Font from 'expo-font';\nimport React, { useState } from 'react';\nimport { Platform, StatusBar, StyleSheet, View } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport AppNavigator from './navigation/AppNavigator';\n\nexport default function App(props) {\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\n\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\n    return (\n      <AppLoading\n        startAsync={loadResourcesAsync}\n        onError={handleLoadingError}\n        onFinish={() => handleFinishLoading(setLoadingComplete)}\n      />\n    );\n  } else {\n    return (\n      <View style={styles.container}>\n        {Platform.OS === 'ios' && <StatusBar barStyle=\"default\" />}\n        <AppNavigator />\n      </View>\n    );\n  }\n}\n\nasync function loadResourcesAsync() {\n  await Promise.all([\n    Asset.loadAsync([\n      require('./assets/images/robot-dev.png'),\n      require('./assets/images/robot-prod.png'),\n    ]),\n    Font.loadAsync({\n      // This is the font that we are using for our tab bar\n      ...Ionicons.font,\n      // We include SpaceMono because we use it in HomeScreen.js. Feel free to\n      // remove this if you are not using it in your app\n      'space-mono': require('./assets/fonts/SpaceMono-Regular.ttf'),\n    }),\n  ]);\n}\n\nfunction handleLoadingError(error) {\n  // In this case, you might want to report the error to your error reporting\n  // service, for example Sentry\n  console.warn(error);\n}\n\nfunction handleFinishLoading(setLoadingComplete) {\n  setLoadingComplete(true);\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/robot-dev.54da1e98.png\";","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}